from datetime import datetime
from pypdf import PdfReader, PdfWriter

# Creates a pdf with data
reader = PdfReader("example.pdf")
writer = PdfWriter()

# Add all pages to the writer
for page in reader.pages:
   writer.add_page(page)

# If you want to add the old metadata, include this line
metadata = reader.metadata
writer.add_metadata(metadata)

# Format the current date and time for the metadata
utc_time = "-05'00'"  # UTC time optional
time = datetime.now().strftime(f"D\072%Y%m%d%H%M%S{utc_time}")

# Add the new metadata
writer.add_metadata(
   {
       "/Author": "Vincent Poitras",
       "/Producer": "UNB",
       "/Title": "Meta Data Example",
       "/Subject": "CS2613",
       "/Keywords": "Example",
       "/CreationDate": time,
       "/ModDate": time,
       "/Creator": "Vincent Poitras",
       "/CustomField": "Example",
   }
)

# Save the new PDF to a file
with open("meta-pdf.pdf", "wb") as f:
   writer.write(f)

# Gets the information
reader = PdfReader("example.pdf")

meta = reader.metadata

# All of the following could be None!
print(meta.author)
print(meta.creator)
print(meta.producer)
print(meta.subject)
print(meta.title)

# Text extraction
reader = PdfReader("example.pdf")
page = reader.pages[0]
print(page.extract_text())

# Transforming several pages

# Read source file
reader = PdfReader("nup-source.pdf")
sourcepage = reader.pages[0]

# Create a destination file, and add a blank page to it
writer = PdfWriter()
destpage = writer.add_blank_page(width=PaperSize.A4.height, height=PaperSize.A4.width)

# Copy source page to destination page, several times
for x in range(4):
    for y in range(4):
        destpage.merge_transformed_page(
            sourcepage,
            Transformation().translate(
                x * sourcepage.mediabox.width,
                y * sourcepage.mediabox.height,
            ),
        )

# Write file
with open("nup-dest2.pdf", "wb") as fp:
    writer.write(fp)

# Removing images
reader = PdfReader("example.pdf")
writer = PdfWriter()

for page in reader.pages:
    writer.add_page(page)

writer.remove_images()

with open("out.pdf", "wb") as f:
    writer.write(f)

    